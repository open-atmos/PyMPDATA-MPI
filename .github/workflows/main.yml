name: main

defaults:
  run:
    shell: bash

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 13 * * 4'
  release:
    types: [published]

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit clean
          pre-commit autoupdate
          pre-commit run --all-files
  pdoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: mpi4py/setup-mpi@v1
      - name: Build
        run: |
          pip install pdoc3
          pip install -e .
          python -We -m pdoc --html PySuperDropletLES
      - name: Deploy
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          BRANCH: pdoc
          FOLDER: html/PySuperDropletLES
          CLEAN: true

  pylint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: mpi4py/setup-mpi@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pylint pytest
      - name: Analysing the code with pylint
        run: |
          pylint --unsafe-load-any-extension=y --disable=fixme $(git ls-files '*.py')

  build:
    needs: [pylint, pdoc, precommit]
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: mpi4py/setup-mpi@v1
      - if: startsWith(matrix.platform, 'ubuntu-')
        run: |
             sudo apt-get update && sudo apt-get install -y libhdf5-mpi-dev pkg-config
      - if: startsWith(matrix.platform, 'macos-')
        run: |
             brew unlink mpich && brew install hdf5-mpi 
             echo HDF5_DIR=/opt/homebrew >> $GITHUB_ENV
      - run: HDF5_MPI="ON" CC=mpicc pip install --no-binary=h5py "git+https://github.com/h5py/h5py#egg=h5py"
      - run: pip install -e .
      - run: python -We -c "import PySuperDropletLES"
      - run: pip install pytest
      - run: |
          for np in 1 2 3; do
            mpiexec --oversubscribe -n $np pytest -p no:unraisableexception -We;
          done;

  dist:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # https://github.com/pypa/setuptools_scm/issues/480
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - run: pip install twine build

      - run: |
          unset CI
          python -m build 2>&1 | tee build.log
          exit `fgrep -i warning build.log | wc -l`
      - run: twine check --strict dist/*

      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@unstable/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@unstable/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

